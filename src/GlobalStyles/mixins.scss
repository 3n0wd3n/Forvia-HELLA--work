@mixin box-shadow-100() {
	box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.12);
}

@mixin box-shadow-200() {
	box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.16);
}

@mixin box-shadow-300() {
	box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.12);
}

@mixin box-shadow-400() {
	box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.16);
}

@mixin flex-item($count, $gap) {
	$percent: calc(100% / $count);
	flex-basis: calc($percent - ($gap * ($count - 1)) / $count);
}

@mixin icon {
	display: inline-block;
	width: 23px;
	height: 24px;
	font-size: 20px;
	background-size: 24px 24px;
	background-color: $black;
	text-align: center;
}

// Transition mixin - you can specify multiple settings (property, duration, delay)
@mixin transition($transition...) {
	-moz-transition: $transition;
	-o-transition: $transition;
	-webkit-transition: $transition;
	transition: $transition;
}

/// Add padding and recalculate to Rem.
///
/// @param {number} $multiplyTopBottom
/// @param {number} $multiplyLeftRight
/// @return {} `Return padding with values in Rem`.
@mixin padding($multiplyTopBottom, $multiplyLeftRight) {
	padding: fromPxToRem(calc(8 * $multiplyTopBottom)) fromPxToRem(calc(8 * $multiplyLeftRight));
}

@mixin icon-size($size) {
	height: fromPxToRem($size);
	width: fromPxToRem($size);
	-webkit-mask-size: contain;
	-webkit-mask-repeat: no-repeat;
}

@mixin variant-gutmann($namespace: &) {
	@at-root body.hella-gutmann #{$namespace} {
		@content;
	}
}

// Convert number from px to Rem
@function fromPxToRem($size, $base-size: 16) {
	@return calc($size / $base-size) + rem;
}
